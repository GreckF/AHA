-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from src/Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTok -> Program                         (0)
	Program ->                                         (1)
	Program -> FuncDecl Program                        (2)
	FuncDecl -> def id ArgList ':=' Term               (3)
	ArgList ->                                         (4)
	ArgList -> id ArgList                              (5)
	Term -> let id ':=' Term in Term                   (6)
	Term -> if Term then Term else Term                (7)
	Term -> fun id '=>' Term                           (8)
	Term -> match Term with Clauses end                (9)
	Term -> Term Term                                  (10)
	Term -> Term '||' Term                             (11)
	Term -> Term '&&' Term                             (12)
	Term -> Term '+' Term                              (13)
	Term -> Term '-' Term                              (14)
	Term -> Term '*' Term                              (15)
	Term -> Term '/' Term                              (16)
	Term -> Term '%' Term                              (17)
	Term -> Term '++' Term                             (18)
	Term -> Term '<' Term                              (19)
	Term -> Term '>' Term                              (20)
	Term -> Term '==' Term                             (21)
	Term -> Term '::' Term                             (22)
	Term -> id                                         (23)
	Term -> '(' Term ')'                               (24)
	Term -> Lit                                        (25)
	Lit -> string                                      (26)
	Lit -> float                                       (27)
	Lit -> int                                         (28)
	Lit -> true                                        (29)
	Lit -> false                                       (30)
	Lit -> '[' ListLit ']'                             (31)
	ListLit ->                                         (32)
	ListLit -> Term                                    (33)
	ListLit -> Term ',' ListLit                        (34)
	Clauses ->                                         (35)
	Clauses -> '|' Pattern '=>' Term Clauses           (36)
	Pattern -> Pattern1 '::' Pattern                   (37)
	Pattern -> Pattern1                                (38)
	Pattern1 -> '#' id Pattern2s                       (39)
	Pattern1 -> Pattern2                               (40)
	Pattern2 -> '(' Pattern ')'                        (41)
	Pattern2 -> '[' PatternsWithComma ']'              (42)
	Pattern2 -> id                                     (43)
	Pattern2s ->                                       (44)
	Pattern2s -> Pattern2 Pattern2s                    (45)
	PatternsWithComma ->                               (46)
	PatternsWithComma -> Pattern                       (47)
	PatternsWithComma -> Pattern ',' PatternsWithComma   (48)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	def            { T.Def }
	':='           { T.DefEq }
	if             { T.If }
	then           { T.Then }
	else           { T.Else }
	fun            { T.Fun }
	'=>'           { T.FunTo }
	let            { T.Let }
	in             { T.In }
	match          { T.Match }
	with           { T.With }
	'|'            { T.Bar }
	'#'            { T.ConsLead }
	end            { T.End }
	id             { T.Id $$ }
	int            { T.Int $$ }
	float          { T.Float $$ }
	string         { T.String $$ }
	true           { T.TTrue }
	false          { T.TFalse }
	'('            { T.ParenL }
	')'            { T.ParenR }
	'['            { T.BracketL }
	']'            { T.BracketR }
	','            { T.Comma }
	'||'           { T.Op "||" }
	'&&'           { T.Op "&&" }
	'+'            { T.Op "+" }
	'-'            { T.Op "-" }
	'*'            { T.Op "*" }
	'/'            { T.Op "/" }
	'%'            { T.Op "%" }
	'++'           { T.Op "++" }
	'<'            { T.Op "<" }
	'>'            { T.Op ">" }
	'=='           { T.Op "==" }
	'::'           { T.Op "::" }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTok rule  0
	Program         rules 1, 2
	FuncDecl        rule  3
	ArgList         rules 4, 5
	Term            rules 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
	Lit             rules 26, 27, 28, 29, 30, 31
	ListLit         rules 32, 33, 34
	Clauses         rules 35, 36
	Pattern         rules 37, 38
	Pattern1        rules 39, 40
	Pattern2        rules 41, 42, 43
	Pattern2s       rules 44, 45
	PatternsWithComma rules 46, 47, 48

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseTok -> . Program                        (rule 0)

	def            shift, and enter state 4
	%eof           reduce using rule 1

	Program        goto state 2
	FuncDecl       goto state 3

State 1

	Program -> .                                        (rule 1)



State 2

	%start_parseTok -> Program .                        (rule 0)

	%eof           accept


State 3

	Program -> FuncDecl . Program                       (rule 2)

	def            shift, and enter state 4
	%eof           reduce using rule 1

	Program        goto state 6
	FuncDecl       goto state 3

State 4

	FuncDecl -> def . id ArgList ':=' Term              (rule 3)

	id             shift, and enter state 5


State 5

	FuncDecl -> def id . ArgList ':=' Term              (rule 3)

	':='           reduce using rule 4
	id             shift, and enter state 8

	ArgList        goto state 7

State 6

	Program -> FuncDecl Program .                       (rule 2)

	%eof           reduce using rule 2


State 7

	FuncDecl -> def id ArgList . ':=' Term              (rule 3)

	':='           shift, and enter state 10


State 8

	ArgList -> id . ArgList                             (rule 5)

	':='           reduce using rule 4
	id             shift, and enter state 8

	ArgList        goto state 9

State 9

	ArgList -> id ArgList .                             (rule 5)

	':='           reduce using rule 5


State 10

	FuncDecl -> def id ArgList ':=' . Term              (rule 3)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 11
	Lit            goto state 12

State 11

	FuncDecl -> def id ArgList ':=' Term .              (rule 3)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 3
	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 3

	Term           goto state 32
	Lit            goto state 12

State 12

	Term -> Lit .                                       (rule 25)

	def            reduce using rule 25
	if             reduce using rule 25
	then           reduce using rule 25
	else           reduce using rule 25
	fun            reduce using rule 25
	let            reduce using rule 25
	in             reduce using rule 25
	match          reduce using rule 25
	with           reduce using rule 25
	'|'            reduce using rule 25
	end            reduce using rule 25
	id             reduce using rule 25
	int            reduce using rule 25
	float          reduce using rule 25
	string         reduce using rule 25
	true           reduce using rule 25
	false          reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	','            reduce using rule 25
	'||'           reduce using rule 25
	'&&'           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	'++'           reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'=='           reduce using rule 25
	'::'           reduce using rule 25
	%eof           reduce using rule 25


State 13

	Term -> if . Term then Term else Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 31
	Lit            goto state 12

State 14

	Term -> fun . id '=>' Term                          (rule 8)

	id             shift, and enter state 30


State 15

	Term -> let . id ':=' Term in Term                  (rule 6)

	id             shift, and enter state 29


State 16

	Term -> match . Term with Clauses end               (rule 9)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 28
	Lit            goto state 12

State 17

	Term -> id .                                        (rule 23)

	def            reduce using rule 23
	if             reduce using rule 23
	then           reduce using rule 23
	else           reduce using rule 23
	fun            reduce using rule 23
	let            reduce using rule 23
	in             reduce using rule 23
	match          reduce using rule 23
	with           reduce using rule 23
	'|'            reduce using rule 23
	end            reduce using rule 23
	id             reduce using rule 23
	int            reduce using rule 23
	float          reduce using rule 23
	string         reduce using rule 23
	true           reduce using rule 23
	false          reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	','            reduce using rule 23
	'||'           reduce using rule 23
	'&&'           reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'%'            reduce using rule 23
	'++'           reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'=='           reduce using rule 23
	'::'           reduce using rule 23
	%eof           reduce using rule 23


State 18

	Lit -> int .                                        (rule 28)

	def            reduce using rule 28
	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	fun            reduce using rule 28
	let            reduce using rule 28
	in             reduce using rule 28
	match          reduce using rule 28
	with           reduce using rule 28
	'|'            reduce using rule 28
	end            reduce using rule 28
	id             reduce using rule 28
	int            reduce using rule 28
	float          reduce using rule 28
	string         reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	'||'           reduce using rule 28
	'&&'           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	'++'           reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'=='           reduce using rule 28
	'::'           reduce using rule 28
	%eof           reduce using rule 28


State 19

	Lit -> float .                                      (rule 27)

	def            reduce using rule 27
	if             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	fun            reduce using rule 27
	let            reduce using rule 27
	in             reduce using rule 27
	match          reduce using rule 27
	with           reduce using rule 27
	'|'            reduce using rule 27
	end            reduce using rule 27
	id             reduce using rule 27
	int            reduce using rule 27
	float          reduce using rule 27
	string         reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	','            reduce using rule 27
	'||'           reduce using rule 27
	'&&'           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	'++'           reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'=='           reduce using rule 27
	'::'           reduce using rule 27
	%eof           reduce using rule 27


State 20

	Lit -> string .                                     (rule 26)

	def            reduce using rule 26
	if             reduce using rule 26
	then           reduce using rule 26
	else           reduce using rule 26
	fun            reduce using rule 26
	let            reduce using rule 26
	in             reduce using rule 26
	match          reduce using rule 26
	with           reduce using rule 26
	'|'            reduce using rule 26
	end            reduce using rule 26
	id             reduce using rule 26
	int            reduce using rule 26
	float          reduce using rule 26
	string         reduce using rule 26
	true           reduce using rule 26
	false          reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	','            reduce using rule 26
	'||'           reduce using rule 26
	'&&'           reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'%'            reduce using rule 26
	'++'           reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'=='           reduce using rule 26
	'::'           reduce using rule 26
	%eof           reduce using rule 26


State 21

	Lit -> true .                                       (rule 29)

	def            reduce using rule 29
	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	fun            reduce using rule 29
	let            reduce using rule 29
	in             reduce using rule 29
	match          reduce using rule 29
	with           reduce using rule 29
	'|'            reduce using rule 29
	end            reduce using rule 29
	id             reduce using rule 29
	int            reduce using rule 29
	float          reduce using rule 29
	string         reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	'||'           reduce using rule 29
	'&&'           reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	'++'           reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'=='           reduce using rule 29
	'::'           reduce using rule 29
	%eof           reduce using rule 29


State 22

	Lit -> false .                                      (rule 30)

	def            reduce using rule 30
	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	fun            reduce using rule 30
	let            reduce using rule 30
	in             reduce using rule 30
	match          reduce using rule 30
	with           reduce using rule 30
	'|'            reduce using rule 30
	end            reduce using rule 30
	id             reduce using rule 30
	int            reduce using rule 30
	float          reduce using rule 30
	string         reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'||'           reduce using rule 30
	'&&'           reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'%'            reduce using rule 30
	'++'           reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'=='           reduce using rule 30
	'::'           reduce using rule 30
	%eof           reduce using rule 30


State 23

	Term -> '(' . Term ')'                              (rule 24)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 27
	Lit            goto state 12

State 24

	Lit -> '[' . ListLit ']'                            (rule 31)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	']'            reduce using rule 32

	Term           goto state 25
	Lit            goto state 12
	ListLit        goto state 26

State 25

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)
	ListLit -> Term .                                   (rule 33)
	ListLit -> Term . ',' ListLit                       (rule 34)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	']'            reduce using rule 33
	','            shift, and enter state 63
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 26

	Lit -> '[' ListLit . ']'                            (rule 31)

	']'            shift, and enter state 62


State 27

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)
	Term -> '(' Term . ')'                              (rule 24)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            shift, and enter state 61
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 28

	Term -> match Term . with Clauses end               (rule 9)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	with           shift, and enter state 60
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 29

	Term -> let id . ':=' Term in Term                  (rule 6)

	':='           shift, and enter state 59


State 30

	Term -> fun id . '=>' Term                          (rule 8)

	'=>'           shift, and enter state 58


State 31

	Term -> if Term . then Term else Term               (rule 7)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	if             shift, and enter state 13
	then           shift, and enter state 57
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 32

	Term -> Term . Term                                 (rule 10)
	Term -> Term Term .                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 10
	if             reduce using rule 10
	then           reduce using rule 10
	else           reduce using rule 10
	fun            reduce using rule 10
	let            reduce using rule 10
	in             reduce using rule 10
	match          reduce using rule 10
	with           reduce using rule 10
	'|'            reduce using rule 10
	end            reduce using rule 10
	id             reduce using rule 10
	int            reduce using rule 10
	float          reduce using rule 10
	string         reduce using rule 10
	true           reduce using rule 10
	false          reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	'['            reduce using rule 10
	']'            reduce using rule 10
	','            reduce using rule 10
	'||'           reduce using rule 10
	'&&'           reduce using rule 10
	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'*'            reduce using rule 10
	'/'            reduce using rule 10
	'%'            reduce using rule 10
	'++'           reduce using rule 10
	'<'            reduce using rule 10
	'>'            reduce using rule 10
	'=='           reduce using rule 10
	'::'           reduce using rule 10
	%eof           reduce using rule 10

	Term           goto state 32
	Lit            goto state 12

State 33

	Term -> Term '||' . Term                            (rule 11)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 56
	Lit            goto state 12

State 34

	Term -> Term '&&' . Term                            (rule 12)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 55
	Lit            goto state 12

State 35

	Term -> Term '+' . Term                             (rule 13)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 54
	Lit            goto state 12

State 36

	Term -> Term '-' . Term                             (rule 14)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 53
	Lit            goto state 12

State 37

	Term -> Term '*' . Term                             (rule 15)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 52
	Lit            goto state 12

State 38

	Term -> Term '/' . Term                             (rule 16)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 51
	Lit            goto state 12

State 39

	Term -> Term '%' . Term                             (rule 17)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 50
	Lit            goto state 12

State 40

	Term -> Term '++' . Term                            (rule 18)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 49
	Lit            goto state 12

State 41

	Term -> Term '<' . Term                             (rule 19)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 48
	Lit            goto state 12

State 42

	Term -> Term '>' . Term                             (rule 20)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 47
	Lit            goto state 12

State 43

	Term -> Term '==' . Term                            (rule 21)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 46
	Lit            goto state 12

State 44

	Term -> Term '::' . Term                            (rule 22)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 45
	Lit            goto state 12

State 45

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)
	Term -> Term '::' Term .                            (rule 22)

	def            reduce using rule 22
	if             shift, and enter state 13
	then           reduce using rule 22
	else           reduce using rule 22
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 22
	match          shift, and enter state 16
	with           reduce using rule 22
	'|'            reduce using rule 22
	end            reduce using rule 22
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 22
	'['            shift, and enter state 24
	']'            reduce using rule 22
	','            reduce using rule 22
	'||'           reduce using rule 22
	'&&'           reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'%'            reduce using rule 22
	'++'           reduce using rule 22
	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'=='           reduce using rule 22
	'::'           shift, and enter state 44
	%eof           reduce using rule 22

	Term           goto state 32
	Lit            goto state 12

State 46

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term '==' Term .                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 21
	if             shift, and enter state 13
	then           reduce using rule 21
	else           reduce using rule 21
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 21
	match          shift, and enter state 16
	with           reduce using rule 21
	'|'            reduce using rule 21
	end            reduce using rule 21
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 21
	'['            shift, and enter state 24
	']'            reduce using rule 21
	','            reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 44
	%eof           reduce using rule 21

	Term           goto state 32
	Lit            goto state 12

State 47

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term '>' Term .                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 20
	if             shift, and enter state 13
	then           reduce using rule 20
	else           reduce using rule 20
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 20
	match          shift, and enter state 16
	with           reduce using rule 20
	'|'            reduce using rule 20
	end            reduce using rule 20
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 20
	'['            shift, and enter state 24
	']'            reduce using rule 20
	','            reduce using rule 20
	'||'           reduce using rule 20
	'&&'           reduce using rule 20
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 44
	%eof           reduce using rule 20

	Term           goto state 32
	Lit            goto state 12

State 48

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term '<' Term .                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 19
	if             shift, and enter state 13
	then           reduce using rule 19
	else           reduce using rule 19
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 19
	match          shift, and enter state 16
	with           reduce using rule 19
	'|'            reduce using rule 19
	end            reduce using rule 19
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 19
	'['            shift, and enter state 24
	']'            reduce using rule 19
	','            reduce using rule 19
	'||'           reduce using rule 19
	'&&'           reduce using rule 19
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 44
	%eof           reduce using rule 19

	Term           goto state 32
	Lit            goto state 12

State 49

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term '++' Term .                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 18
	if             shift, and enter state 13
	then           reduce using rule 18
	else           reduce using rule 18
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 18
	match          shift, and enter state 16
	with           reduce using rule 18
	'|'            reduce using rule 18
	end            reduce using rule 18
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 18
	'['            shift, and enter state 24
	']'            reduce using rule 18
	','            reduce using rule 18
	'||'           reduce using rule 18
	'&&'           reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           reduce using rule 18
	'<'            reduce using rule 18
	'>'            reduce using rule 18
	'=='           reduce using rule 18
	'::'           shift, and enter state 44
	%eof           reduce using rule 18

	Term           goto state 32
	Lit            goto state 12

State 50

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term '%' Term .                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 17
	if             shift, and enter state 13
	then           reduce using rule 17
	else           reduce using rule 17
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 17
	match          shift, and enter state 16
	with           reduce using rule 17
	'|'            reduce using rule 17
	end            reduce using rule 17
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 17
	'['            shift, and enter state 24
	']'            reduce using rule 17
	','            reduce using rule 17
	'||'           reduce using rule 17
	'&&'           reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	'%'            reduce using rule 17
	'++'           reduce using rule 17
	'<'            reduce using rule 17
	'>'            reduce using rule 17
	'=='           reduce using rule 17
	'::'           shift, and enter state 44
	%eof           reduce using rule 17

	Term           goto state 32
	Lit            goto state 12

State 51

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term '/' Term .                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 16
	if             shift, and enter state 13
	then           reduce using rule 16
	else           reduce using rule 16
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 16
	match          shift, and enter state 16
	with           reduce using rule 16
	'|'            reduce using rule 16
	end            reduce using rule 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 16
	'['            shift, and enter state 24
	']'            reduce using rule 16
	','            reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'%'            reduce using rule 16
	'++'           reduce using rule 16
	'<'            reduce using rule 16
	'>'            reduce using rule 16
	'=='           reduce using rule 16
	'::'           shift, and enter state 44
	%eof           reduce using rule 16

	Term           goto state 32
	Lit            goto state 12

State 52

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term '*' Term .                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 15
	if             shift, and enter state 13
	then           reduce using rule 15
	else           reduce using rule 15
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 15
	match          shift, and enter state 16
	with           reduce using rule 15
	'|'            reduce using rule 15
	end            reduce using rule 15
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 15
	'['            shift, and enter state 24
	']'            reduce using rule 15
	','            reduce using rule 15
	'||'           reduce using rule 15
	'&&'           reduce using rule 15
	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            reduce using rule 15
	'/'            reduce using rule 15
	'%'            reduce using rule 15
	'++'           reduce using rule 15
	'<'            reduce using rule 15
	'>'            reduce using rule 15
	'=='           reduce using rule 15
	'::'           shift, and enter state 44
	%eof           reduce using rule 15

	Term           goto state 32
	Lit            goto state 12

State 53

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term '-' Term .                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 14
	if             shift, and enter state 13
	then           reduce using rule 14
	else           reduce using rule 14
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 14
	match          shift, and enter state 16
	with           reduce using rule 14
	'|'            reduce using rule 14
	end            reduce using rule 14
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 14
	'['            shift, and enter state 24
	']'            reduce using rule 14
	','            reduce using rule 14
	'||'           reduce using rule 14
	'&&'           reduce using rule 14
	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           reduce using rule 14
	'<'            reduce using rule 14
	'>'            reduce using rule 14
	'=='           reduce using rule 14
	'::'           shift, and enter state 44
	%eof           reduce using rule 14

	Term           goto state 32
	Lit            goto state 12

State 54

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term '+' Term .                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 13
	if             shift, and enter state 13
	then           reduce using rule 13
	else           reduce using rule 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 13
	match          shift, and enter state 16
	with           reduce using rule 13
	'|'            reduce using rule 13
	end            reduce using rule 13
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 13
	'['            shift, and enter state 24
	']'            reduce using rule 13
	','            reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           reduce using rule 13
	'<'            reduce using rule 13
	'>'            reduce using rule 13
	'=='           reduce using rule 13
	'::'           shift, and enter state 44
	%eof           reduce using rule 13

	Term           goto state 32
	Lit            goto state 12

State 55

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term '&&' Term .                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 12
	if             shift, and enter state 13
	then           reduce using rule 12
	else           reduce using rule 12
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 12
	match          shift, and enter state 16
	with           reduce using rule 12
	'|'            reduce using rule 12
	end            reduce using rule 12
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 12
	'['            shift, and enter state 24
	']'            reduce using rule 12
	','            reduce using rule 12
	'||'           reduce using rule 12
	'&&'           reduce using rule 12
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 12

	Term           goto state 32
	Lit            goto state 12

State 56

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term '||' Term .                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 11
	if             shift, and enter state 13
	then           reduce using rule 11
	else           reduce using rule 11
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 11
	match          shift, and enter state 16
	with           reduce using rule 11
	'|'            reduce using rule 11
	end            reduce using rule 11
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 11
	'['            shift, and enter state 24
	']'            reduce using rule 11
	','            reduce using rule 11
	'||'           reduce using rule 11
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 11

	Term           goto state 32
	Lit            goto state 12

State 57

	Term -> if Term then . Term else Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 69
	Lit            goto state 12

State 58

	Term -> fun id '=>' . Term                          (rule 8)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 68
	Lit            goto state 12

State 59

	Term -> let id ':=' . Term in Term                  (rule 6)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 67
	Lit            goto state 12

State 60

	Term -> match Term with . Clauses end               (rule 9)

	'|'            shift, and enter state 66
	end            reduce using rule 35

	Clauses        goto state 65

State 61

	Term -> '(' Term ')' .                              (rule 24)

	def            reduce using rule 24
	if             reduce using rule 24
	then           reduce using rule 24
	else           reduce using rule 24
	fun            reduce using rule 24
	let            reduce using rule 24
	in             reduce using rule 24
	match          reduce using rule 24
	with           reduce using rule 24
	'|'            reduce using rule 24
	end            reduce using rule 24
	id             reduce using rule 24
	int            reduce using rule 24
	float          reduce using rule 24
	string         reduce using rule 24
	true           reduce using rule 24
	false          reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	','            reduce using rule 24
	'||'           reduce using rule 24
	'&&'           reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'%'            reduce using rule 24
	'++'           reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'=='           reduce using rule 24
	'::'           reduce using rule 24
	%eof           reduce using rule 24


State 62

	Lit -> '[' ListLit ']' .                            (rule 31)

	def            reduce using rule 31
	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	fun            reduce using rule 31
	let            reduce using rule 31
	in             reduce using rule 31
	match          reduce using rule 31
	with           reduce using rule 31
	'|'            reduce using rule 31
	end            reduce using rule 31
	id             reduce using rule 31
	int            reduce using rule 31
	float          reduce using rule 31
	string         reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'||'           reduce using rule 31
	'&&'           reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'%'            reduce using rule 31
	'++'           reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'=='           reduce using rule 31
	'::'           reduce using rule 31
	%eof           reduce using rule 31


State 63

	ListLit -> Term ',' . ListLit                       (rule 34)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	']'            reduce using rule 32

	Term           goto state 25
	Lit            goto state 12
	ListLit        goto state 64

State 64

	ListLit -> Term ',' ListLit .                       (rule 34)

	']'            reduce using rule 34


State 65

	Term -> match Term with Clauses . end               (rule 9)

	end            shift, and enter state 79


State 66

	Clauses -> '|' . Pattern '=>' Term Clauses          (rule 36)

	'#'            shift, and enter state 75
	id             shift, and enter state 76
	'('            shift, and enter state 77
	'['            shift, and enter state 78

	Pattern        goto state 72
	Pattern1       goto state 73
	Pattern2       goto state 74

State 67

	Term -> let id ':=' Term . in Term                  (rule 6)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             shift, and enter state 71
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 68

	Term -> fun id '=>' Term .                          (rule 8)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 8
	if             shift, and enter state 13
	then           reduce using rule 8
	else           reduce using rule 8
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 8
	match          shift, and enter state 16
	with           reduce using rule 8
	'|'            reduce using rule 8
	end            reduce using rule 8
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 8
	'['            shift, and enter state 24
	']'            reduce using rule 8
	','            reduce using rule 8
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 8

	Term           goto state 32
	Lit            goto state 12

State 69

	Term -> if Term then Term . else Term               (rule 7)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	if             shift, and enter state 13
	else           shift, and enter state 70
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12

State 70

	Term -> if Term then Term else . Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 87
	Lit            goto state 12

State 71

	Term -> let id ':=' Term in . Term                  (rule 6)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 86
	Lit            goto state 12

State 72

	Clauses -> '|' Pattern . '=>' Term Clauses          (rule 36)

	'=>'           shift, and enter state 85


State 73

	Pattern -> Pattern1 . '::' Pattern                  (rule 37)
	Pattern -> Pattern1 .                               (rule 38)

	'=>'           reduce using rule 38
	')'            reduce using rule 38
	']'            reduce using rule 38
	','            reduce using rule 38
	'::'           shift, and enter state 84


State 74

	Pattern1 -> Pattern2 .                              (rule 40)

	'=>'           reduce using rule 40
	')'            reduce using rule 40
	']'            reduce using rule 40
	','            reduce using rule 40
	'::'           reduce using rule 40


State 75

	Pattern1 -> '#' . id Pattern2s                      (rule 39)

	id             shift, and enter state 83


State 76

	Pattern2 -> id .                                    (rule 43)

	'=>'           reduce using rule 43
	id             reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'['            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'::'           reduce using rule 43


State 77

	Pattern2 -> '(' . Pattern ')'                       (rule 41)

	'#'            shift, and enter state 75
	id             shift, and enter state 76
	'('            shift, and enter state 77
	'['            shift, and enter state 78

	Pattern        goto state 82
	Pattern1       goto state 73
	Pattern2       goto state 74

State 78

	Pattern2 -> '[' . PatternsWithComma ']'             (rule 42)

	'#'            shift, and enter state 75
	id             shift, and enter state 76
	'('            shift, and enter state 77
	'['            shift, and enter state 78
	']'            reduce using rule 46

	Pattern        goto state 80
	Pattern1       goto state 73
	Pattern2       goto state 74
	PatternsWithCommagoto state 81

State 79

	Term -> match Term with Clauses end .               (rule 9)

	def            reduce using rule 9
	if             reduce using rule 9
	then           reduce using rule 9
	else           reduce using rule 9
	fun            reduce using rule 9
	let            reduce using rule 9
	in             reduce using rule 9
	match          reduce using rule 9
	with           reduce using rule 9
	'|'            reduce using rule 9
	end            reduce using rule 9
	id             reduce using rule 9
	int            reduce using rule 9
	float          reduce using rule 9
	string         reduce using rule 9
	true           reduce using rule 9
	false          reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	'['            reduce using rule 9
	']'            reduce using rule 9
	','            reduce using rule 9
	'||'           reduce using rule 9
	'&&'           reduce using rule 9
	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'%'            reduce using rule 9
	'++'           reduce using rule 9
	'<'            reduce using rule 9
	'>'            reduce using rule 9
	'=='           reduce using rule 9
	'::'           reduce using rule 9
	%eof           reduce using rule 9


State 80

	PatternsWithComma -> Pattern .                      (rule 47)
	PatternsWithComma -> Pattern . ',' PatternsWithComma    (rule 48)

	']'            reduce using rule 47
	','            shift, and enter state 94


State 81

	Pattern2 -> '[' PatternsWithComma . ']'             (rule 42)

	']'            shift, and enter state 93


State 82

	Pattern2 -> '(' Pattern . ')'                       (rule 41)

	')'            shift, and enter state 92


State 83

	Pattern1 -> '#' id . Pattern2s                      (rule 39)

	'=>'           reduce using rule 44
	id             shift, and enter state 76
	'('            shift, and enter state 77
	')'            reduce using rule 44
	'['            shift, and enter state 78
	']'            reduce using rule 44
	','            reduce using rule 44
	'::'           reduce using rule 44

	Pattern2       goto state 90
	Pattern2s      goto state 91

State 84

	Pattern -> Pattern1 '::' . Pattern                  (rule 37)

	'#'            shift, and enter state 75
	id             shift, and enter state 76
	'('            shift, and enter state 77
	'['            shift, and enter state 78

	Pattern        goto state 89
	Pattern1       goto state 73
	Pattern2       goto state 74

State 85

	Clauses -> '|' Pattern '=>' . Term Clauses          (rule 36)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24

	Term           goto state 88
	Lit            goto state 12

State 86

	Term -> let id ':=' Term in Term .                  (rule 6)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 6
	if             shift, and enter state 13
	then           reduce using rule 6
	else           reduce using rule 6
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 6
	match          shift, and enter state 16
	with           reduce using rule 6
	'|'            reduce using rule 6
	end            reduce using rule 6
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 6
	'['            shift, and enter state 24
	']'            reduce using rule 6
	','            reduce using rule 6
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 6

	Term           goto state 32
	Lit            goto state 12

State 87

	Term -> if Term then Term else Term .               (rule 7)
	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)

	def            reduce using rule 7
	if             shift, and enter state 13
	then           reduce using rule 7
	else           reduce using rule 7
	fun            shift, and enter state 14
	let            shift, and enter state 15
	in             reduce using rule 7
	match          shift, and enter state 16
	with           reduce using rule 7
	'|'            reduce using rule 7
	end            reduce using rule 7
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	')'            reduce using rule 7
	'['            shift, and enter state 24
	']'            reduce using rule 7
	','            reduce using rule 7
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44
	%eof           reduce using rule 7

	Term           goto state 32
	Lit            goto state 12

State 88

	Term -> Term . Term                                 (rule 10)
	Term -> Term . '||' Term                            (rule 11)
	Term -> Term . '&&' Term                            (rule 12)
	Term -> Term . '+' Term                             (rule 13)
	Term -> Term . '-' Term                             (rule 14)
	Term -> Term . '*' Term                             (rule 15)
	Term -> Term . '/' Term                             (rule 16)
	Term -> Term . '%' Term                             (rule 17)
	Term -> Term . '++' Term                            (rule 18)
	Term -> Term . '<' Term                             (rule 19)
	Term -> Term . '>' Term                             (rule 20)
	Term -> Term . '==' Term                            (rule 21)
	Term -> Term . '::' Term                            (rule 22)
	Clauses -> '|' Pattern '=>' Term . Clauses          (rule 36)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	let            shift, and enter state 15
	match          shift, and enter state 16
	'|'            shift, and enter state 66
	end            reduce using rule 35
	id             shift, and enter state 17
	int            shift, and enter state 18
	float          shift, and enter state 19
	string         shift, and enter state 20
	true           shift, and enter state 21
	false          shift, and enter state 22
	'('            shift, and enter state 23
	'['            shift, and enter state 24
	'||'           shift, and enter state 33
	'&&'           shift, and enter state 34
	'+'            shift, and enter state 35
	'-'            shift, and enter state 36
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'%'            shift, and enter state 39
	'++'           shift, and enter state 40
	'<'            shift, and enter state 41
	'>'            shift, and enter state 42
	'=='           shift, and enter state 43
	'::'           shift, and enter state 44

	Term           goto state 32
	Lit            goto state 12
	Clauses        goto state 97

State 89

	Pattern -> Pattern1 '::' Pattern .                  (rule 37)

	'=>'           reduce using rule 37
	')'            reduce using rule 37
	']'            reduce using rule 37
	','            reduce using rule 37


State 90

	Pattern2s -> Pattern2 . Pattern2s                   (rule 45)

	'=>'           reduce using rule 44
	id             shift, and enter state 76
	'('            shift, and enter state 77
	')'            reduce using rule 44
	'['            shift, and enter state 78
	']'            reduce using rule 44
	','            reduce using rule 44
	'::'           reduce using rule 44

	Pattern2       goto state 90
	Pattern2s      goto state 96

State 91

	Pattern1 -> '#' id Pattern2s .                      (rule 39)

	'=>'           reduce using rule 39
	')'            reduce using rule 39
	']'            reduce using rule 39
	','            reduce using rule 39
	'::'           reduce using rule 39


State 92

	Pattern2 -> '(' Pattern ')' .                       (rule 41)

	'=>'           reduce using rule 41
	id             reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'['            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41
	'::'           reduce using rule 41


State 93

	Pattern2 -> '[' PatternsWithComma ']' .             (rule 42)

	'=>'           reduce using rule 42
	id             reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'['            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'::'           reduce using rule 42


State 94

	PatternsWithComma -> Pattern ',' . PatternsWithComma    (rule 48)

	'#'            shift, and enter state 75
	id             shift, and enter state 76
	'('            shift, and enter state 77
	'['            shift, and enter state 78
	']'            reduce using rule 46

	Pattern        goto state 80
	Pattern1       goto state 73
	Pattern2       goto state 74
	PatternsWithCommagoto state 95

State 95

	PatternsWithComma -> Pattern ',' PatternsWithComma .    (rule 48)

	']'            reduce using rule 48


State 96

	Pattern2s -> Pattern2 Pattern2s .                   (rule 45)

	'=>'           reduce using rule 45
	')'            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'::'           reduce using rule 45


State 97

	Clauses -> '|' Pattern '=>' Term Clauses .          (rule 36)

	end            reduce using rule 36


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 49
Number of terminals: 37
Number of non-terminals: 13
Number of states: 98
