-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from src/Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseTok -> Program                         (0)
	Program ->                                         (1)
	Program -> FuncDecl Program                        (2)
	FuncDecl -> def id ArgList ':=' Term               (3)
	ArgList ->                                         (4)
	ArgList -> id ArgList                              (5)
	Term -> let id ':=' Term in Term                   (6)
	Term -> if Term then Term else Term                (7)
	Term -> fun id '=>' Term                           (8)
	Term -> forall id ':' Term '=>' Term               (9)
	Term -> exist id ':' Term '=>' Term                (10)
	Term -> for id ':' Term '@' id ArgList '=>' Term   (11)
	Term -> match Term with Clauses end                (12)
	Term -> Term Term                                  (13)
	Term -> Term '||' Term                             (14)
	Term -> Term '&&' Term                             (15)
	Term -> Term '+' Term                              (16)
	Term -> Term '-' Term                              (17)
	Term -> Term '*' Term                              (18)
	Term -> Term '/' Term                              (19)
	Term -> Term '%' Term                              (20)
	Term -> Term '++' Term                             (21)
	Term -> Term '<' Term                              (22)
	Term -> Term '>' Term                              (23)
	Term -> Term '==' Term                             (24)
	Term -> Term '::' Term                             (25)
	Term -> Term ';' Term                              (26)
	Term -> '(' Term ')'                               (27)
	Term -> Lit                                        (28)
	Term -> id                                         (29)
	Lit -> string                                      (30)
	Lit -> float                                       (31)
	Lit -> int                                         (32)
	Lit -> true                                        (33)
	Lit -> false                                       (34)
	Lit -> '[' ListLit ']'                             (35)
	ListLit ->                                         (36)
	ListLit -> Term                                    (37)
	ListLit -> Term ',' ListLit                        (38)
	Clauses ->                                         (39)
	Clauses -> '|' Pattern '=>' Term Clauses           (40)
	Pattern -> Pattern1 '::' Pattern                   (41)
	Pattern -> Pattern1                                (42)
	Pattern1 -> '#' id Pattern2s                       (43)
	Pattern1 -> Pattern2                               (44)
	Pattern2 -> '(' Pattern ')'                        (45)
	Pattern2 -> '[' PatternsWithComma ']'              (46)
	Pattern2 -> id                                     (47)
	Pattern2s ->                                       (48)
	Pattern2s -> Pattern2 Pattern2s                    (49)
	PatternsWithComma ->                               (50)
	PatternsWithComma -> Pattern                       (51)
	PatternsWithComma -> Pattern ',' PatternsWithComma   (52)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	def            { T.Def }
	':='           { T.DefEq }
	if             { T.If }
	then           { T.Then }
	else           { T.Else }
	fun            { T.Fun }
	exist          { T.Exist }
	forall         { T.Forall }
	for            { T.For }
	'=>'           { T.FunTo }
	let            { T.Let }
	in             { T.In }
	match          { T.Match }
	with           { T.With }
	'|'            { T.Bar }
	'#'            { T.ConsLead }
	end            { T.End }
	int            { T.Int $$ }
	float          { T.Float $$ }
	string         { T.String $$ }
	true           { T.TTrue }
	false          { T.TFalse }
	'('            { T.ParenL }
	')'            { T.ParenR }
	'['            { T.BracketL }
	']'            { T.BracketR }
	','            { T.Comma }
	'||'           { T.Op "||" }
	'&&'           { T.Op "&&" }
	'+'            { T.Op "+" }
	'-'            { T.Op "-" }
	'*'            { T.Op "*" }
	'/'            { T.Op "/" }
	'%'            { T.Op "%" }
	'++'           { T.Op "++" }
	'<'            { T.Op "<" }
	'>'            { T.Op ">" }
	'=='           { T.Op "==" }
	'::'           { T.Op "::" }
	';'            { T.Op ";" }
	'@'            { T.At }
	':'            { T.Anno }
	id             { T.Id $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseTok rule  0
	Program         rules 1, 2
	FuncDecl        rule  3
	ArgList         rules 4, 5
	Term            rules 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Lit             rules 30, 31, 32, 33, 34, 35
	ListLit         rules 36, 37, 38
	Clauses         rules 39, 40
	Pattern         rules 41, 42
	Pattern1        rules 43, 44
	Pattern2        rules 45, 46, 47
	Pattern2s       rules 48, 49
	PatternsWithComma rules 50, 51, 52

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseTok -> . Program                        (rule 0)

	def            shift, and enter state 4
	%eof           reduce using rule 1

	Program        goto state 2
	FuncDecl       goto state 3

State 1

	Program -> .                                        (rule 1)



State 2

	%start_parseTok -> Program .                        (rule 0)

	%eof           accept


State 3

	Program -> FuncDecl . Program                       (rule 2)

	def            shift, and enter state 4
	%eof           reduce using rule 1

	Program        goto state 6
	FuncDecl       goto state 3

State 4

	FuncDecl -> def . id ArgList ':=' Term              (rule 3)

	id             shift, and enter state 5


State 5

	FuncDecl -> def id . ArgList ':=' Term              (rule 3)

	':='           reduce using rule 4
	id             shift, and enter state 8

	ArgList        goto state 7

State 6

	Program -> FuncDecl Program .                       (rule 2)

	%eof           reduce using rule 2


State 7

	FuncDecl -> def id ArgList . ':=' Term              (rule 3)

	':='           shift, and enter state 10


State 8

	ArgList -> id . ArgList                             (rule 5)

	':='           reduce using rule 4
	'=>'           reduce using rule 4
	id             shift, and enter state 8

	ArgList        goto state 9

State 9

	ArgList -> id ArgList .                             (rule 5)

	':='           reduce using rule 5
	'=>'           reduce using rule 5


State 10

	FuncDecl -> def id ArgList ':=' . Term              (rule 3)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 11
	Lit            goto state 12

State 11

	FuncDecl -> def id ArgList ':=' Term .              (rule 3)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 3
	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27
	%eof           reduce using rule 3

	Term           goto state 38
	Lit            goto state 12

State 12

	Term -> Lit .                                       (rule 28)

	def            reduce using rule 28
	if             reduce using rule 28
	then           reduce using rule 28
	else           reduce using rule 28
	fun            reduce using rule 28
	exist          reduce using rule 28
	forall         reduce using rule 28
	for            reduce using rule 28
	'=>'           reduce using rule 28
	let            reduce using rule 28
	in             reduce using rule 28
	match          reduce using rule 28
	with           reduce using rule 28
	'|'            reduce using rule 28
	end            reduce using rule 28
	int            reduce using rule 28
	float          reduce using rule 28
	string         reduce using rule 28
	true           reduce using rule 28
	false          reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	','            reduce using rule 28
	'||'           reduce using rule 28
	'&&'           reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'%'            reduce using rule 28
	'++'           reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'=='           reduce using rule 28
	'::'           reduce using rule 28
	';'            reduce using rule 28
	'@'            reduce using rule 28
	id             reduce using rule 28
	%eof           reduce using rule 28


State 13

	Term -> if . Term then Term else Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 37
	Lit            goto state 12

State 14

	Term -> fun . id '=>' Term                          (rule 8)

	id             shift, and enter state 36


State 15

	Term -> exist . id ':' Term '=>' Term               (rule 10)

	id             shift, and enter state 35


State 16

	Term -> forall . id ':' Term '=>' Term              (rule 9)

	id             shift, and enter state 34


State 17

	Term -> for . id ':' Term '@' id ArgList '=>' Term    (rule 11)

	id             shift, and enter state 33


State 18

	Term -> let . id ':=' Term in Term                  (rule 6)

	id             shift, and enter state 32


State 19

	Term -> match . Term with Clauses end               (rule 12)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 31
	Lit            goto state 12

State 20

	Lit -> int .                                        (rule 32)

	def            reduce using rule 32
	if             reduce using rule 32
	then           reduce using rule 32
	else           reduce using rule 32
	fun            reduce using rule 32
	exist          reduce using rule 32
	forall         reduce using rule 32
	for            reduce using rule 32
	'=>'           reduce using rule 32
	let            reduce using rule 32
	in             reduce using rule 32
	match          reduce using rule 32
	with           reduce using rule 32
	'|'            reduce using rule 32
	end            reduce using rule 32
	int            reduce using rule 32
	float          reduce using rule 32
	string         reduce using rule 32
	true           reduce using rule 32
	false          reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	','            reduce using rule 32
	'||'           reduce using rule 32
	'&&'           reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'%'            reduce using rule 32
	'++'           reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'=='           reduce using rule 32
	'::'           reduce using rule 32
	';'            reduce using rule 32
	'@'            reduce using rule 32
	id             reduce using rule 32
	%eof           reduce using rule 32


State 21

	Lit -> float .                                      (rule 31)

	def            reduce using rule 31
	if             reduce using rule 31
	then           reduce using rule 31
	else           reduce using rule 31
	fun            reduce using rule 31
	exist          reduce using rule 31
	forall         reduce using rule 31
	for            reduce using rule 31
	'=>'           reduce using rule 31
	let            reduce using rule 31
	in             reduce using rule 31
	match          reduce using rule 31
	with           reduce using rule 31
	'|'            reduce using rule 31
	end            reduce using rule 31
	int            reduce using rule 31
	float          reduce using rule 31
	string         reduce using rule 31
	true           reduce using rule 31
	false          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	','            reduce using rule 31
	'||'           reduce using rule 31
	'&&'           reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'%'            reduce using rule 31
	'++'           reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'=='           reduce using rule 31
	'::'           reduce using rule 31
	';'            reduce using rule 31
	'@'            reduce using rule 31
	id             reduce using rule 31
	%eof           reduce using rule 31


State 22

	Lit -> string .                                     (rule 30)

	def            reduce using rule 30
	if             reduce using rule 30
	then           reduce using rule 30
	else           reduce using rule 30
	fun            reduce using rule 30
	exist          reduce using rule 30
	forall         reduce using rule 30
	for            reduce using rule 30
	'=>'           reduce using rule 30
	let            reduce using rule 30
	in             reduce using rule 30
	match          reduce using rule 30
	with           reduce using rule 30
	'|'            reduce using rule 30
	end            reduce using rule 30
	int            reduce using rule 30
	float          reduce using rule 30
	string         reduce using rule 30
	true           reduce using rule 30
	false          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	','            reduce using rule 30
	'||'           reduce using rule 30
	'&&'           reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'%'            reduce using rule 30
	'++'           reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'=='           reduce using rule 30
	'::'           reduce using rule 30
	';'            reduce using rule 30
	'@'            reduce using rule 30
	id             reduce using rule 30
	%eof           reduce using rule 30


State 23

	Lit -> true .                                       (rule 33)

	def            reduce using rule 33
	if             reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	fun            reduce using rule 33
	exist          reduce using rule 33
	forall         reduce using rule 33
	for            reduce using rule 33
	'=>'           reduce using rule 33
	let            reduce using rule 33
	in             reduce using rule 33
	match          reduce using rule 33
	with           reduce using rule 33
	'|'            reduce using rule 33
	end            reduce using rule 33
	int            reduce using rule 33
	float          reduce using rule 33
	string         reduce using rule 33
	true           reduce using rule 33
	false          reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	','            reduce using rule 33
	'||'           reduce using rule 33
	'&&'           reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'%'            reduce using rule 33
	'++'           reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'=='           reduce using rule 33
	'::'           reduce using rule 33
	';'            reduce using rule 33
	'@'            reduce using rule 33
	id             reduce using rule 33
	%eof           reduce using rule 33


State 24

	Lit -> false .                                      (rule 34)

	def            reduce using rule 34
	if             reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	fun            reduce using rule 34
	exist          reduce using rule 34
	forall         reduce using rule 34
	for            reduce using rule 34
	'=>'           reduce using rule 34
	let            reduce using rule 34
	in             reduce using rule 34
	match          reduce using rule 34
	with           reduce using rule 34
	'|'            reduce using rule 34
	end            reduce using rule 34
	int            reduce using rule 34
	float          reduce using rule 34
	string         reduce using rule 34
	true           reduce using rule 34
	false          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	','            reduce using rule 34
	'||'           reduce using rule 34
	'&&'           reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'%'            reduce using rule 34
	'++'           reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'=='           reduce using rule 34
	'::'           reduce using rule 34
	';'            reduce using rule 34
	'@'            reduce using rule 34
	id             reduce using rule 34
	%eof           reduce using rule 34


State 25

	Term -> '(' . Term ')'                              (rule 27)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 30
	Lit            goto state 12

State 26

	Lit -> '[' . ListLit ']'                            (rule 35)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 36
	id             shift, and enter state 27

	Term           goto state 28
	Lit            goto state 12
	ListLit        goto state 29

State 27

	Term -> id .                                        (rule 29)

	def            reduce using rule 29
	if             reduce using rule 29
	then           reduce using rule 29
	else           reduce using rule 29
	fun            reduce using rule 29
	exist          reduce using rule 29
	forall         reduce using rule 29
	for            reduce using rule 29
	'=>'           reduce using rule 29
	let            reduce using rule 29
	in             reduce using rule 29
	match          reduce using rule 29
	with           reduce using rule 29
	'|'            reduce using rule 29
	end            reduce using rule 29
	int            reduce using rule 29
	float          reduce using rule 29
	string         reduce using rule 29
	true           reduce using rule 29
	false          reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	','            reduce using rule 29
	'||'           reduce using rule 29
	'&&'           reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'%'            reduce using rule 29
	'++'           reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'=='           reduce using rule 29
	'::'           reduce using rule 29
	';'            reduce using rule 29
	'@'            reduce using rule 29
	id             reduce using rule 29
	%eof           reduce using rule 29


State 28

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)
	ListLit -> Term .                                   (rule 37)
	ListLit -> Term . ',' ListLit                       (rule 38)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 37
	','            shift, and enter state 74
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 29

	Lit -> '[' ListLit . ']'                            (rule 35)

	']'            shift, and enter state 73


State 30

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)
	Term -> '(' Term . ')'                              (rule 27)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            shift, and enter state 72
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 31

	Term -> match Term . with Clauses end               (rule 12)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	with           shift, and enter state 71
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 32

	Term -> let id . ':=' Term in Term                  (rule 6)

	':='           shift, and enter state 70


State 33

	Term -> for id . ':' Term '@' id ArgList '=>' Term    (rule 11)

	':'            shift, and enter state 69


State 34

	Term -> forall id . ':' Term '=>' Term              (rule 9)

	':'            shift, and enter state 68


State 35

	Term -> exist id . ':' Term '=>' Term               (rule 10)

	':'            shift, and enter state 67


State 36

	Term -> fun id . '=>' Term                          (rule 8)

	'=>'           shift, and enter state 66


State 37

	Term -> if Term . then Term else Term               (rule 7)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	then           shift, and enter state 65
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 38

	Term -> Term . Term                                 (rule 13)
	Term -> Term Term .                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 13
	if             reduce using rule 13
	then           reduce using rule 13
	else           reduce using rule 13
	fun            reduce using rule 13
	exist          reduce using rule 13
	forall         reduce using rule 13
	for            reduce using rule 13
	'=>'           reduce using rule 13
	let            reduce using rule 13
	in             reduce using rule 13
	match          reduce using rule 13
	with           reduce using rule 13
	'|'            reduce using rule 13
	end            reduce using rule 13
	int            reduce using rule 13
	float          reduce using rule 13
	string         reduce using rule 13
	true           reduce using rule 13
	false          reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	','            reduce using rule 13
	'||'           reduce using rule 13
	'&&'           reduce using rule 13
	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'%'            reduce using rule 13
	'++'           reduce using rule 13
	'<'            reduce using rule 13
	'>'            reduce using rule 13
	'=='           reduce using rule 13
	'::'           reduce using rule 13
	';'            reduce using rule 13
	'@'            reduce using rule 13
	id             reduce using rule 13
	%eof           reduce using rule 13

	Term           goto state 38
	Lit            goto state 12

State 39

	Term -> Term '||' . Term                            (rule 14)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 64
	Lit            goto state 12

State 40

	Term -> Term '&&' . Term                            (rule 15)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 63
	Lit            goto state 12

State 41

	Term -> Term '+' . Term                             (rule 16)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 62
	Lit            goto state 12

State 42

	Term -> Term '-' . Term                             (rule 17)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 61
	Lit            goto state 12

State 43

	Term -> Term '*' . Term                             (rule 18)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 60
	Lit            goto state 12

State 44

	Term -> Term '/' . Term                             (rule 19)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 59
	Lit            goto state 12

State 45

	Term -> Term '%' . Term                             (rule 20)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 58
	Lit            goto state 12

State 46

	Term -> Term '++' . Term                            (rule 21)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 57
	Lit            goto state 12

State 47

	Term -> Term '<' . Term                             (rule 22)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 56
	Lit            goto state 12

State 48

	Term -> Term '>' . Term                             (rule 23)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 55
	Lit            goto state 12

State 49

	Term -> Term '==' . Term                            (rule 24)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 54
	Lit            goto state 12

State 50

	Term -> Term '::' . Term                            (rule 25)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 53
	Lit            goto state 12

State 51

	Term -> Term ';' . Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 52
	Lit            goto state 12

State 52

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)
	Term -> Term ';' Term .                             (rule 26)

	def            reduce using rule 26
	if             shift, and enter state 13
	then           reduce using rule 26
	else           reduce using rule 26
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 26
	let            shift, and enter state 18
	in             reduce using rule 26
	match          shift, and enter state 19
	with           reduce using rule 26
	'|'            reduce using rule 26
	end            reduce using rule 26
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 26
	'['            shift, and enter state 26
	']'            reduce using rule 26
	','            reduce using rule 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 26
	id             shift, and enter state 27
	%eof           reduce using rule 26

	Term           goto state 38
	Lit            goto state 12

State 53

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term '::' Term .                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 25
	if             shift, and enter state 13
	then           reduce using rule 25
	else           reduce using rule 25
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 25
	let            shift, and enter state 18
	in             reduce using rule 25
	match          shift, and enter state 19
	with           reduce using rule 25
	'|'            reduce using rule 25
	end            reduce using rule 25
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 25
	'['            shift, and enter state 26
	']'            reduce using rule 25
	','            reduce using rule 25
	'||'           reduce using rule 25
	'&&'           reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'%'            reduce using rule 25
	'++'           reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'=='           reduce using rule 25
	'::'           shift, and enter state 50
	';'            reduce using rule 25
	'@'            reduce using rule 25
	id             shift, and enter state 27
	%eof           reduce using rule 25

	Term           goto state 38
	Lit            goto state 12

State 54

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term '==' Term .                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 24
	if             shift, and enter state 13
	then           reduce using rule 24
	else           reduce using rule 24
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 24
	let            shift, and enter state 18
	in             reduce using rule 24
	match          shift, and enter state 19
	with           reduce using rule 24
	'|'            reduce using rule 24
	end            reduce using rule 24
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 24
	'['            shift, and enter state 26
	']'            reduce using rule 24
	','            reduce using rule 24
	'||'           reduce using rule 24
	'&&'           reduce using rule 24
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 50
	';'            reduce using rule 24
	'@'            reduce using rule 24
	id             shift, and enter state 27
	%eof           reduce using rule 24

	Term           goto state 38
	Lit            goto state 12

State 55

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term '>' Term .                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 23
	if             shift, and enter state 13
	then           reduce using rule 23
	else           reduce using rule 23
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 23
	let            shift, and enter state 18
	in             reduce using rule 23
	match          shift, and enter state 19
	with           reduce using rule 23
	'|'            reduce using rule 23
	end            reduce using rule 23
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 23
	'['            shift, and enter state 26
	']'            reduce using rule 23
	','            reduce using rule 23
	'||'           reduce using rule 23
	'&&'           reduce using rule 23
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 50
	';'            reduce using rule 23
	'@'            reduce using rule 23
	id             shift, and enter state 27
	%eof           reduce using rule 23

	Term           goto state 38
	Lit            goto state 12

State 56

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term '<' Term .                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 22
	if             shift, and enter state 13
	then           reduce using rule 22
	else           reduce using rule 22
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 22
	let            shift, and enter state 18
	in             reduce using rule 22
	match          shift, and enter state 19
	with           reduce using rule 22
	'|'            reduce using rule 22
	end            reduce using rule 22
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 22
	'['            shift, and enter state 26
	']'            reduce using rule 22
	','            reduce using rule 22
	'||'           reduce using rule 22
	'&&'           reduce using rule 22
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            fail
	'>'            fail
	'=='           fail
	'::'           shift, and enter state 50
	';'            reduce using rule 22
	'@'            reduce using rule 22
	id             shift, and enter state 27
	%eof           reduce using rule 22

	Term           goto state 38
	Lit            goto state 12

State 57

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term '++' Term .                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 21
	if             shift, and enter state 13
	then           reduce using rule 21
	else           reduce using rule 21
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 21
	let            shift, and enter state 18
	in             reduce using rule 21
	match          shift, and enter state 19
	with           reduce using rule 21
	'|'            reduce using rule 21
	end            reduce using rule 21
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 21
	'['            shift, and enter state 26
	']'            reduce using rule 21
	','            reduce using rule 21
	'||'           reduce using rule 21
	'&&'           reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'=='           reduce using rule 21
	'::'           shift, and enter state 50
	';'            reduce using rule 21
	'@'            reduce using rule 21
	id             shift, and enter state 27
	%eof           reduce using rule 21

	Term           goto state 38
	Lit            goto state 12

State 58

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term '%' Term .                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 20
	if             shift, and enter state 13
	then           reduce using rule 20
	else           reduce using rule 20
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 20
	let            shift, and enter state 18
	in             reduce using rule 20
	match          shift, and enter state 19
	with           reduce using rule 20
	'|'            reduce using rule 20
	end            reduce using rule 20
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 20
	'['            shift, and enter state 26
	']'            reduce using rule 20
	','            reduce using rule 20
	'||'           reduce using rule 20
	'&&'           reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'%'            reduce using rule 20
	'++'           reduce using rule 20
	'<'            reduce using rule 20
	'>'            reduce using rule 20
	'=='           reduce using rule 20
	'::'           shift, and enter state 50
	';'            reduce using rule 20
	'@'            reduce using rule 20
	id             shift, and enter state 27
	%eof           reduce using rule 20

	Term           goto state 38
	Lit            goto state 12

State 59

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term '/' Term .                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 19
	if             shift, and enter state 13
	then           reduce using rule 19
	else           reduce using rule 19
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 19
	let            shift, and enter state 18
	in             reduce using rule 19
	match          shift, and enter state 19
	with           reduce using rule 19
	'|'            reduce using rule 19
	end            reduce using rule 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 19
	'['            shift, and enter state 26
	']'            reduce using rule 19
	','            reduce using rule 19
	'||'           reduce using rule 19
	'&&'           reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	'%'            reduce using rule 19
	'++'           reduce using rule 19
	'<'            reduce using rule 19
	'>'            reduce using rule 19
	'=='           reduce using rule 19
	'::'           shift, and enter state 50
	';'            reduce using rule 19
	'@'            reduce using rule 19
	id             shift, and enter state 27
	%eof           reduce using rule 19

	Term           goto state 38
	Lit            goto state 12

State 60

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term '*' Term .                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 18
	if             shift, and enter state 13
	then           reduce using rule 18
	else           reduce using rule 18
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 18
	let            shift, and enter state 18
	in             reduce using rule 18
	match          shift, and enter state 19
	with           reduce using rule 18
	'|'            reduce using rule 18
	end            reduce using rule 18
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 18
	'['            shift, and enter state 26
	']'            reduce using rule 18
	','            reduce using rule 18
	'||'           reduce using rule 18
	'&&'           reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            reduce using rule 18
	'/'            reduce using rule 18
	'%'            reduce using rule 18
	'++'           reduce using rule 18
	'<'            reduce using rule 18
	'>'            reduce using rule 18
	'=='           reduce using rule 18
	'::'           shift, and enter state 50
	';'            reduce using rule 18
	'@'            reduce using rule 18
	id             shift, and enter state 27
	%eof           reduce using rule 18

	Term           goto state 38
	Lit            goto state 12

State 61

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term '-' Term .                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 17
	if             shift, and enter state 13
	then           reduce using rule 17
	else           reduce using rule 17
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 17
	let            shift, and enter state 18
	in             reduce using rule 17
	match          shift, and enter state 19
	with           reduce using rule 17
	'|'            reduce using rule 17
	end            reduce using rule 17
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 17
	'['            shift, and enter state 26
	']'            reduce using rule 17
	','            reduce using rule 17
	'||'           reduce using rule 17
	'&&'           reduce using rule 17
	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           reduce using rule 17
	'<'            reduce using rule 17
	'>'            reduce using rule 17
	'=='           reduce using rule 17
	'::'           shift, and enter state 50
	';'            reduce using rule 17
	'@'            reduce using rule 17
	id             shift, and enter state 27
	%eof           reduce using rule 17

	Term           goto state 38
	Lit            goto state 12

State 62

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term '+' Term .                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 16
	if             shift, and enter state 13
	then           reduce using rule 16
	else           reduce using rule 16
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 16
	let            shift, and enter state 18
	in             reduce using rule 16
	match          shift, and enter state 19
	with           reduce using rule 16
	'|'            reduce using rule 16
	end            reduce using rule 16
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 16
	'['            shift, and enter state 26
	']'            reduce using rule 16
	','            reduce using rule 16
	'||'           reduce using rule 16
	'&&'           reduce using rule 16
	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           reduce using rule 16
	'<'            reduce using rule 16
	'>'            reduce using rule 16
	'=='           reduce using rule 16
	'::'           shift, and enter state 50
	';'            reduce using rule 16
	'@'            reduce using rule 16
	id             shift, and enter state 27
	%eof           reduce using rule 16

	Term           goto state 38
	Lit            goto state 12

State 63

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term '&&' Term .                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 15
	if             shift, and enter state 13
	then           reduce using rule 15
	else           reduce using rule 15
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 15
	let            shift, and enter state 18
	in             reduce using rule 15
	match          shift, and enter state 19
	with           reduce using rule 15
	'|'            reduce using rule 15
	end            reduce using rule 15
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 15
	'['            shift, and enter state 26
	']'            reduce using rule 15
	','            reduce using rule 15
	'||'           reduce using rule 15
	'&&'           reduce using rule 15
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            reduce using rule 15
	'@'            reduce using rule 15
	id             shift, and enter state 27
	%eof           reduce using rule 15

	Term           goto state 38
	Lit            goto state 12

State 64

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term '||' Term .                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 14
	if             shift, and enter state 13
	then           reduce using rule 14
	else           reduce using rule 14
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 14
	let            shift, and enter state 18
	in             reduce using rule 14
	match          shift, and enter state 19
	with           reduce using rule 14
	'|'            reduce using rule 14
	end            reduce using rule 14
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 14
	'['            shift, and enter state 26
	']'            reduce using rule 14
	','            reduce using rule 14
	'||'           reduce using rule 14
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            reduce using rule 14
	'@'            reduce using rule 14
	id             shift, and enter state 27
	%eof           reduce using rule 14

	Term           goto state 38
	Lit            goto state 12

State 65

	Term -> if Term then . Term else Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 83
	Lit            goto state 12

State 66

	Term -> fun id '=>' . Term                          (rule 8)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 82
	Lit            goto state 12

State 67

	Term -> exist id ':' . Term '=>' Term               (rule 10)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 81
	Lit            goto state 12

State 68

	Term -> forall id ':' . Term '=>' Term              (rule 9)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 80
	Lit            goto state 12

State 69

	Term -> for id ':' . Term '@' id ArgList '=>' Term    (rule 11)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 79
	Lit            goto state 12

State 70

	Term -> let id ':=' . Term in Term                  (rule 6)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 78
	Lit            goto state 12

State 71

	Term -> match Term with . Clauses end               (rule 12)

	'|'            shift, and enter state 77
	end            reduce using rule 39

	Clauses        goto state 76

State 72

	Term -> '(' Term ')' .                              (rule 27)

	def            reduce using rule 27
	if             reduce using rule 27
	then           reduce using rule 27
	else           reduce using rule 27
	fun            reduce using rule 27
	exist          reduce using rule 27
	forall         reduce using rule 27
	for            reduce using rule 27
	'=>'           reduce using rule 27
	let            reduce using rule 27
	in             reduce using rule 27
	match          reduce using rule 27
	with           reduce using rule 27
	'|'            reduce using rule 27
	end            reduce using rule 27
	int            reduce using rule 27
	float          reduce using rule 27
	string         reduce using rule 27
	true           reduce using rule 27
	false          reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	','            reduce using rule 27
	'||'           reduce using rule 27
	'&&'           reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'%'            reduce using rule 27
	'++'           reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'=='           reduce using rule 27
	'::'           reduce using rule 27
	';'            reduce using rule 27
	'@'            reduce using rule 27
	id             reduce using rule 27
	%eof           reduce using rule 27


State 73

	Lit -> '[' ListLit ']' .                            (rule 35)

	def            reduce using rule 35
	if             reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	fun            reduce using rule 35
	exist          reduce using rule 35
	forall         reduce using rule 35
	for            reduce using rule 35
	'=>'           reduce using rule 35
	let            reduce using rule 35
	in             reduce using rule 35
	match          reduce using rule 35
	with           reduce using rule 35
	'|'            reduce using rule 35
	end            reduce using rule 35
	int            reduce using rule 35
	float          reduce using rule 35
	string         reduce using rule 35
	true           reduce using rule 35
	false          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	','            reduce using rule 35
	'||'           reduce using rule 35
	'&&'           reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'%'            reduce using rule 35
	'++'           reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'=='           reduce using rule 35
	'::'           reduce using rule 35
	';'            reduce using rule 35
	'@'            reduce using rule 35
	id             reduce using rule 35
	%eof           reduce using rule 35


State 74

	ListLit -> Term ',' . ListLit                       (rule 38)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	']'            reduce using rule 36
	id             shift, and enter state 27

	Term           goto state 28
	Lit            goto state 12
	ListLit        goto state 75

State 75

	ListLit -> Term ',' ListLit .                       (rule 38)

	']'            reduce using rule 38


State 76

	Term -> match Term with Clauses . end               (rule 12)

	end            shift, and enter state 96


State 77

	Clauses -> '|' . Pattern '=>' Term Clauses          (rule 40)

	'#'            shift, and enter state 92
	'('            shift, and enter state 93
	'['            shift, and enter state 94
	id             shift, and enter state 95

	Pattern        goto state 89
	Pattern1       goto state 90
	Pattern2       goto state 91

State 78

	Term -> let id ':=' Term . in Term                  (rule 6)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	in             shift, and enter state 88
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 79

	Term -> for id ':' Term . '@' id ArgList '=>' Term    (rule 11)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            shift, and enter state 87
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 80

	Term -> forall id ':' Term . '=>' Term              (rule 9)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           shift, and enter state 86
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 81

	Term -> exist id ':' Term . '=>' Term               (rule 10)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           shift, and enter state 85
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 82

	Term -> fun id '=>' Term .                          (rule 8)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 8
	if             shift, and enter state 13
	then           reduce using rule 8
	else           reduce using rule 8
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 8
	let            shift, and enter state 18
	in             reduce using rule 8
	match          shift, and enter state 19
	with           reduce using rule 8
	'|'            reduce using rule 8
	end            reduce using rule 8
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 8
	'['            shift, and enter state 26
	']'            reduce using rule 8
	','            reduce using rule 8
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 8
	id             shift, and enter state 27
	%eof           reduce using rule 8

	Term           goto state 38
	Lit            goto state 12

State 83

	Term -> if Term then Term . else Term               (rule 7)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	if             shift, and enter state 13
	else           shift, and enter state 84
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12

State 84

	Term -> if Term then Term else . Term               (rule 7)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 107
	Lit            goto state 12

State 85

	Term -> exist id ':' Term '=>' . Term               (rule 10)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 106
	Lit            goto state 12

State 86

	Term -> forall id ':' Term '=>' . Term              (rule 9)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 105
	Lit            goto state 12

State 87

	Term -> for id ':' Term '@' . id ArgList '=>' Term    (rule 11)

	id             shift, and enter state 104


State 88

	Term -> let id ':=' Term in . Term                  (rule 6)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 103
	Lit            goto state 12

State 89

	Clauses -> '|' Pattern . '=>' Term Clauses          (rule 40)

	'=>'           shift, and enter state 102


State 90

	Pattern -> Pattern1 . '::' Pattern                  (rule 41)
	Pattern -> Pattern1 .                               (rule 42)

	'=>'           reduce using rule 42
	')'            reduce using rule 42
	']'            reduce using rule 42
	','            reduce using rule 42
	'::'           shift, and enter state 101


State 91

	Pattern1 -> Pattern2 .                              (rule 44)

	'=>'           reduce using rule 44
	')'            reduce using rule 44
	']'            reduce using rule 44
	','            reduce using rule 44
	'::'           reduce using rule 44


State 92

	Pattern1 -> '#' . id Pattern2s                      (rule 43)

	id             shift, and enter state 100


State 93

	Pattern2 -> '(' . Pattern ')'                       (rule 45)

	'#'            shift, and enter state 92
	'('            shift, and enter state 93
	'['            shift, and enter state 94
	id             shift, and enter state 95

	Pattern        goto state 99
	Pattern1       goto state 90
	Pattern2       goto state 91

State 94

	Pattern2 -> '[' . PatternsWithComma ']'             (rule 46)

	'#'            shift, and enter state 92
	'('            shift, and enter state 93
	'['            shift, and enter state 94
	']'            reduce using rule 50
	id             shift, and enter state 95

	Pattern        goto state 97
	Pattern1       goto state 90
	Pattern2       goto state 91
	PatternsWithCommagoto state 98

State 95

	Pattern2 -> id .                                    (rule 47)

	'=>'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	','            reduce using rule 47
	'::'           reduce using rule 47
	id             reduce using rule 47


State 96

	Term -> match Term with Clauses end .               (rule 12)

	def            reduce using rule 12
	if             reduce using rule 12
	then           reduce using rule 12
	else           reduce using rule 12
	fun            reduce using rule 12
	exist          reduce using rule 12
	forall         reduce using rule 12
	for            reduce using rule 12
	'=>'           reduce using rule 12
	let            reduce using rule 12
	in             reduce using rule 12
	match          reduce using rule 12
	with           reduce using rule 12
	'|'            reduce using rule 12
	end            reduce using rule 12
	int            reduce using rule 12
	float          reduce using rule 12
	string         reduce using rule 12
	true           reduce using rule 12
	false          reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	'['            reduce using rule 12
	']'            reduce using rule 12
	','            reduce using rule 12
	'||'           reduce using rule 12
	'&&'           reduce using rule 12
	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'*'            reduce using rule 12
	'/'            reduce using rule 12
	'%'            reduce using rule 12
	'++'           reduce using rule 12
	'<'            reduce using rule 12
	'>'            reduce using rule 12
	'=='           reduce using rule 12
	'::'           reduce using rule 12
	';'            reduce using rule 12
	'@'            reduce using rule 12
	id             reduce using rule 12
	%eof           reduce using rule 12


State 97

	PatternsWithComma -> Pattern .                      (rule 51)
	PatternsWithComma -> Pattern . ',' PatternsWithComma    (rule 52)

	']'            reduce using rule 51
	','            shift, and enter state 115


State 98

	Pattern2 -> '[' PatternsWithComma . ']'             (rule 46)

	']'            shift, and enter state 114


State 99

	Pattern2 -> '(' Pattern . ')'                       (rule 45)

	')'            shift, and enter state 113


State 100

	Pattern1 -> '#' id . Pattern2s                      (rule 43)

	'=>'           reduce using rule 48
	'('            shift, and enter state 93
	')'            reduce using rule 48
	'['            shift, and enter state 94
	']'            reduce using rule 48
	','            reduce using rule 48
	'::'           reduce using rule 48
	id             shift, and enter state 95

	Pattern2       goto state 111
	Pattern2s      goto state 112

State 101

	Pattern -> Pattern1 '::' . Pattern                  (rule 41)

	'#'            shift, and enter state 92
	'('            shift, and enter state 93
	'['            shift, and enter state 94
	id             shift, and enter state 95

	Pattern        goto state 110
	Pattern1       goto state 90
	Pattern2       goto state 91

State 102

	Clauses -> '|' Pattern '=>' . Term Clauses          (rule 40)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 109
	Lit            goto state 12

State 103

	Term -> let id ':=' Term in Term .                  (rule 6)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 6
	if             shift, and enter state 13
	then           reduce using rule 6
	else           reduce using rule 6
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 6
	let            shift, and enter state 18
	in             reduce using rule 6
	match          shift, and enter state 19
	with           reduce using rule 6
	'|'            reduce using rule 6
	end            reduce using rule 6
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 6
	'['            shift, and enter state 26
	']'            reduce using rule 6
	','            reduce using rule 6
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 6
	id             shift, and enter state 27
	%eof           reduce using rule 6

	Term           goto state 38
	Lit            goto state 12

State 104

	Term -> for id ':' Term '@' id . ArgList '=>' Term    (rule 11)

	'=>'           reduce using rule 4
	id             shift, and enter state 8

	ArgList        goto state 108

State 105

	Term -> forall id ':' Term '=>' Term .              (rule 9)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 9
	if             shift, and enter state 13
	then           reduce using rule 9
	else           reduce using rule 9
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 9
	let            shift, and enter state 18
	in             reduce using rule 9
	match          shift, and enter state 19
	with           reduce using rule 9
	'|'            reduce using rule 9
	end            reduce using rule 9
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 9
	'['            shift, and enter state 26
	']'            reduce using rule 9
	','            reduce using rule 9
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 9
	id             shift, and enter state 27
	%eof           reduce using rule 9

	Term           goto state 38
	Lit            goto state 12

State 106

	Term -> exist id ':' Term '=>' Term .               (rule 10)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 10
	if             shift, and enter state 13
	then           reduce using rule 10
	else           reduce using rule 10
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 10
	let            shift, and enter state 18
	in             reduce using rule 10
	match          shift, and enter state 19
	with           reduce using rule 10
	'|'            reduce using rule 10
	end            reduce using rule 10
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 10
	'['            shift, and enter state 26
	']'            reduce using rule 10
	','            reduce using rule 10
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 10
	id             shift, and enter state 27
	%eof           reduce using rule 10

	Term           goto state 38
	Lit            goto state 12

State 107

	Term -> if Term then Term else Term .               (rule 7)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 7
	if             shift, and enter state 13
	then           reduce using rule 7
	else           reduce using rule 7
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 7
	let            shift, and enter state 18
	in             reduce using rule 7
	match          shift, and enter state 19
	with           reduce using rule 7
	'|'            reduce using rule 7
	end            reduce using rule 7
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 7
	'['            shift, and enter state 26
	']'            reduce using rule 7
	','            reduce using rule 7
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 7
	id             shift, and enter state 27
	%eof           reduce using rule 7

	Term           goto state 38
	Lit            goto state 12

State 108

	Term -> for id ':' Term '@' id ArgList . '=>' Term    (rule 11)

	'=>'           shift, and enter state 119


State 109

	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)
	Clauses -> '|' Pattern '=>' Term . Clauses          (rule 40)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	'|'            shift, and enter state 77
	end            reduce using rule 39
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	id             shift, and enter state 27

	Term           goto state 38
	Lit            goto state 12
	Clauses        goto state 118

State 110

	Pattern -> Pattern1 '::' Pattern .                  (rule 41)

	'=>'           reduce using rule 41
	')'            reduce using rule 41
	']'            reduce using rule 41
	','            reduce using rule 41


State 111

	Pattern2s -> Pattern2 . Pattern2s                   (rule 49)

	'=>'           reduce using rule 48
	'('            shift, and enter state 93
	')'            reduce using rule 48
	'['            shift, and enter state 94
	']'            reduce using rule 48
	','            reduce using rule 48
	'::'           reduce using rule 48
	id             shift, and enter state 95

	Pattern2       goto state 111
	Pattern2s      goto state 117

State 112

	Pattern1 -> '#' id Pattern2s .                      (rule 43)

	'=>'           reduce using rule 43
	')'            reduce using rule 43
	']'            reduce using rule 43
	','            reduce using rule 43
	'::'           reduce using rule 43


State 113

	Pattern2 -> '(' Pattern ')' .                       (rule 45)

	'=>'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	','            reduce using rule 45
	'::'           reduce using rule 45
	id             reduce using rule 45


State 114

	Pattern2 -> '[' PatternsWithComma ']' .             (rule 46)

	'=>'           reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	','            reduce using rule 46
	'::'           reduce using rule 46
	id             reduce using rule 46


State 115

	PatternsWithComma -> Pattern ',' . PatternsWithComma    (rule 52)

	'#'            shift, and enter state 92
	'('            shift, and enter state 93
	'['            shift, and enter state 94
	']'            reduce using rule 50
	id             shift, and enter state 95

	Pattern        goto state 97
	Pattern1       goto state 90
	Pattern2       goto state 91
	PatternsWithCommagoto state 116

State 116

	PatternsWithComma -> Pattern ',' PatternsWithComma .    (rule 52)

	']'            reduce using rule 52


State 117

	Pattern2s -> Pattern2 Pattern2s .                   (rule 49)

	'=>'           reduce using rule 49
	')'            reduce using rule 49
	']'            reduce using rule 49
	','            reduce using rule 49
	'::'           reduce using rule 49


State 118

	Clauses -> '|' Pattern '=>' Term Clauses .          (rule 40)

	end            reduce using rule 40


State 119

	Term -> for id ':' Term '@' id ArgList '=>' . Term    (rule 11)

	if             shift, and enter state 13
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	let            shift, and enter state 18
	match          shift, and enter state 19
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	'['            shift, and enter state 26
	id             shift, and enter state 27

	Term           goto state 120
	Lit            goto state 12

State 120

	Term -> for id ':' Term '@' id ArgList '=>' Term .    (rule 11)
	Term -> Term . Term                                 (rule 13)
	Term -> Term . '||' Term                            (rule 14)
	Term -> Term . '&&' Term                            (rule 15)
	Term -> Term . '+' Term                             (rule 16)
	Term -> Term . '-' Term                             (rule 17)
	Term -> Term . '*' Term                             (rule 18)
	Term -> Term . '/' Term                             (rule 19)
	Term -> Term . '%' Term                             (rule 20)
	Term -> Term . '++' Term                            (rule 21)
	Term -> Term . '<' Term                             (rule 22)
	Term -> Term . '>' Term                             (rule 23)
	Term -> Term . '==' Term                            (rule 24)
	Term -> Term . '::' Term                            (rule 25)
	Term -> Term . ';' Term                             (rule 26)

	def            reduce using rule 11
	if             shift, and enter state 13
	then           reduce using rule 11
	else           reduce using rule 11
	fun            shift, and enter state 14
	exist          shift, and enter state 15
	forall         shift, and enter state 16
	for            shift, and enter state 17
	'=>'           reduce using rule 11
	let            shift, and enter state 18
	in             reduce using rule 11
	match          shift, and enter state 19
	with           reduce using rule 11
	'|'            reduce using rule 11
	end            reduce using rule 11
	int            shift, and enter state 20
	float          shift, and enter state 21
	string         shift, and enter state 22
	true           shift, and enter state 23
	false          shift, and enter state 24
	'('            shift, and enter state 25
	')'            reduce using rule 11
	'['            shift, and enter state 26
	']'            reduce using rule 11
	','            reduce using rule 11
	'||'           shift, and enter state 39
	'&&'           shift, and enter state 40
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'*'            shift, and enter state 43
	'/'            shift, and enter state 44
	'%'            shift, and enter state 45
	'++'           shift, and enter state 46
	'<'            shift, and enter state 47
	'>'            shift, and enter state 48
	'=='           shift, and enter state 49
	'::'           shift, and enter state 50
	';'            shift, and enter state 51
	'@'            reduce using rule 11
	id             shift, and enter state 27
	%eof           reduce using rule 11

	Term           goto state 38
	Lit            goto state 12

-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 53
Number of terminals: 43
Number of non-terminals: 13
Number of states: 121
