program ::= 
  | fun_decl*

fun_decl ::= 
  | `def` id id* `:=` term 

term ::= 
  | `if` term `then` term `else` term 
  | `fun` id `=>` term 
  | `let` id `:=` term `in` term 
  | `match` term `with` clause `end`
  | exp1

clause ::= 
  | (`|` pattern `=>` term)

-- ::
-- * / % 
-- + - ++  
-- < > == 
-- &&
-- ||


exp1 ::= 
  | exp1 `||` exp2
  | exp2

exp2 ::= 
  | exp2 `&&` exp3
  | exp3 

exp3 ::=
  | exp4 `<` exp4
  | exp4 `>` exp4 
  | exp3 `==` exp4 
  | exp4 

exp4 ::= 
  | exp4 `+` exp5 
  | exp4 `-` exp5
  | exp4 `++` exp5 
  | exp5 

exp5 ::=
  | exp5 `*` exp6
  | exp5 `/` exp6 
  | exp5 `%` exp6
  | exp6 

exp6 ::= 
  | exp7 `::` exp6 
  | exp7 

exp7 ::= 
  | exp7 ` ` exp8
  | exp8 

exp8 ::= 
  | `(` term `)`
  | id
  | lit 

lit ::= 
  | integer 
  | float
  | string
  | `[` list_elements `]`

list_elements ::= 
  | emp
  | term (`,` term)*
